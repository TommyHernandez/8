<?php

	/**
	 * # CAUTION #
	 *
	 * Autogenerated code. Any changes in this file will be lost.
	 * To add extra behaviour, please, edit the extended class (extended.class.php)
	 *
	*/

	class SystemSession_auto {

		public static $fields = array (
  'SessionId' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'User' => 
  array (
    'type' => 'SystemUser',
    'native' => false,
  ),
  'Created' => 
  array (
    'type' => 'Number',
    'native' => true,
  ),
  'UserAgent' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Data' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Ip' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
);

		protected static $data = array();

		protected $id;
		protected $timestamp;
		protected $operation;
		public $row;

		public function __construct(&$row) {
			$this->id = $row['id'];
			$this->timestamp = $row['__timestamp__'];
			$this->operation = $row['__operation__'];
			$this->row = $row;
		}

		public function RAW($field) {
			if (array_key_exists($field, $this->row)) {
				return $this->row[$field];
			}
			return null;
		}

		public static function PREFETCH($field, $collection) {
			$IDs = array();
			foreach ($collection as $item) {
				$IDs[] = $item->RAW($field);
			}
			$IDs = array_unique($IDs);
			if (count($IDs)) {
				$implode = implode(',', $IDs);
				return self::SELECT(" Id IN ($implode) ");
			}
			return array();
		}

		public static function SELECT($where=null) {
			$db = Database::getInstance();

			$sql = "SELECT * FROM `SystemSession`";
			if ($where !== null)
				$sql .= " WHERE ".$where;

			$select = array();
			$result = $db->sql($sql);
			while ($result && $row=mysql_fetch_assoc($result)) {
				$id = $row['id'];
				if (!array_key_exists($id, self::$data))
					self::$data[$id] = new SystemSession($row);
				$select[] = &self::$data[$id];
			}
			return $select;
		}
		
		public static function INSERT() {
			$db = Database::getInstance();
			$sql = "INSERT INTO `SystemSession` (`id`, `__timestamp__`, `__operation__`) VALUES (NULL, ".time().", 'INSERT')";
			$result = $db->sql($sql);
			$id = mysql_insert_id();
			return self::ROW($id);
		}

		public static function ROW($id) {
			$id = intval($id);
			if (array_key_exists($id, self::$data)) {
				return self::$data[$id];
			} else {
				$db = Database::getInstance();
				$rows = self::SELECT("id='".mysql_real_escape_string($id)."'");
				if (count($rows)) {
					return $rows[0];
				} else {
					return null;
				}
			}
		}

		public function DELETE($physical=true) {
			$db = Database::getInstance();
			if ($physical) {
				$sql = "DELETE FROM `SystemSession` WHERE id='".$this->id."'";
				unset(self::$data[$this->id]);
			} else {
				$sql = "UPDATE `SystemSession` SET `__timestamp__` = ".time().", `__operation__` = 'DELETE' WHERE `id`='".$this->id."'";
			}
			$db->sql($sql);
		}

		/* Deprecated */
		public final function getId() {
			return intval($this->id);
		}

		public final function ID() {
			return intval($this->id);
		}

		public final function TIMESTAMP() {
			return intval($this->timestamp);
		}

		public final function OPERATION() {
			return $this->operation;
		}

		public final function getClassName() {
			return 'SystemSession';
		}

		public function toString() {
			return "SystemSession[{$this->id}]";
		}

		// Setters and Getters
public function setSessionId($value) { $this->row['SessionId'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemSession` SET `SessionId`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getSessionId() { return $this->row['SessionId']; }


		public function setUser($value) {
			if (is_object($value) && $value->getClassName() == 'SystemUser') {
				$id = $value->getId();
				$db = Database::getInstance();
				$sql = "UPDATE `SystemSession` SET `User`='".$id."',	`__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['User'] = $id;
			} else if ($value === null) {
				$db = Database::getInstance();
				$sql = "UPDATE `SystemSession` SET `User`='0', `__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['User'] = 0;
			}
		}

		public function getUser() {
			if ($this->row['User'] == 0) {
				return null;
			} else {
				return SystemUser::ROW($this->row['User']);
			}
		}
public function setCreated($value) { $value = str_replace(',', '.', $value); $this->row['Created'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemSession` SET `Created`='$value', `__timestamp__` = $timestamp, `__operation__` = 'UPDATE'  WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql); } public function getCreated() { $value = $this->row['Created']; settype($value, 'float'); return $value; }

public function setUserAgent($value) { $this->row['UserAgent'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemSession` SET `UserAgent`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getUserAgent() { return $this->row['UserAgent']; }

public function setData($value) { $this->row['Data'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemSession` SET `Data`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getData() { return $this->row['Data']; }

public function setIp($value) { $this->row['Ip'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemSession` SET `Ip`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getIp() { return $this->row['Ip']; }


	}
