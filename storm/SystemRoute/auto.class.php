<?php

	/**
	 * # CAUTION #
	 *
	 * Autogenerated code. Any changes in this file will be lost.
	 * To add extra behaviour, please, edit the extended class (extended.class.php)
	 *
	*/

	class SystemRoute_auto {

		public static $fields = array (
  'Title' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Keywords' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Description' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Url' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Parent' => 
  array (
    'type' => 'SystemRoute',
    'native' => false,
  ),
  'Previous' => 
  array (
    'type' => 'SystemRoute',
    'native' => false,
  ),
  'Next' => 
  array (
    'type' => 'SystemRoute',
    'native' => false,
  ),
  'CustomUrl' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'LastModified' => 
  array (
    'type' => 'Number',
    'native' => true,
  ),
  'Etag' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Reference' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
  'Controller' => 
  array (
    'type' => 'Text',
    'native' => true,
  ),
);

		protected static $data = array();

		protected $id;
		protected $timestamp;
		protected $operation;
		public $row;

		public function __construct(&$row) {
			$this->id = $row['id'];
			$this->timestamp = $row['__timestamp__'];
			$this->operation = $row['__operation__'];
			$this->row = $row;
		}

		public function RAW($field) {
			if (array_key_exists($field, $this->row)) {
				return $this->row[$field];
			}
			return null;
		}

		public static function PREFETCH($field, $collection) {
			$IDs = array();
			foreach ($collection as $item) {
				$IDs[] = $item->RAW($field);
			}
			$IDs = array_unique($IDs);
			if (count($IDs)) {
				$implode = implode(',', $IDs);
				return self::SELECT(" Id IN ($implode) ");
			}
			return array();
		}

		public static function SELECT($where=null) {
			$db = Database::getInstance();

			$sql = "SELECT * FROM `SystemRoute`";
			if ($where !== null)
				$sql .= " WHERE ".$where;

			$select = array();
			$result = $db->sql($sql);
			while ($result && $row=mysql_fetch_assoc($result)) {
				$id = $row['id'];
				if (!array_key_exists($id, self::$data))
					self::$data[$id] = new SystemRoute($row);
				$select[] = &self::$data[$id];
			}
			return $select;
		}
		
		public static function INSERT() {
			$db = Database::getInstance();
			$sql = "INSERT INTO `SystemRoute` (`id`, `__timestamp__`, `__operation__`) VALUES (NULL, ".time().", 'INSERT')";
			$result = $db->sql($sql);
			$id = mysql_insert_id();
			return self::ROW($id);
		}

		public static function ROW($id) {
			$id = intval($id);
			if (array_key_exists($id, self::$data)) {
				return self::$data[$id];
			} else {
				$db = Database::getInstance();
				$rows = self::SELECT("id='".mysql_real_escape_string($id)."'");
				if (count($rows)) {
					return $rows[0];
				} else {
					return null;
				}
			}
		}

		public function DELETE($physical=true) {
			$db = Database::getInstance();
			if ($physical) {
				$sql = "DELETE FROM `SystemRoute` WHERE id='".$this->id."'";
				unset(self::$data[$this->id]);
			} else {
				$sql = "UPDATE `SystemRoute` SET `__timestamp__` = ".time().", `__operation__` = 'DELETE' WHERE `id`='".$this->id."'";
			}
			$db->sql($sql);
		}

		/* Deprecated */
		public final function getId() {
			return intval($this->id);
		}

		public final function ID() {
			return intval($this->id);
		}

		public final function TIMESTAMP() {
			return intval($this->timestamp);
		}

		public final function OPERATION() {
			return $this->operation;
		}

		public final function getClassName() {
			return 'SystemRoute';
		}

		public function toString() {
			return "SystemRoute[{$this->id}]";
		}

		// Setters and Getters
public function setTitle($value) { $this->row['Title'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Title`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getTitle() { return $this->row['Title']; }

public function setKeywords($value) { $this->row['Keywords'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Keywords`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getKeywords() { return $this->row['Keywords']; }

public function setDescription($value) { $this->row['Description'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Description`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getDescription() { return $this->row['Description']; }

public function setUrl($value) { $this->row['Url'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Url`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getUrl() { return $this->row['Url']; }


		public function setParent($value) {
			if (is_object($value) && $value->getClassName() == 'SystemRoute') {
				$id = $value->getId();
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Parent`='".$id."',	`__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Parent'] = $id;
			} else if ($value === null) {
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Parent`='0', `__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Parent'] = 0;
			}
		}

		public function getParent() {
			if ($this->row['Parent'] == 0) {
				return null;
			} else {
				return SystemRoute::ROW($this->row['Parent']);
			}
		}

		public function setPrevious($value) {
			if (is_object($value) && $value->getClassName() == 'SystemRoute') {
				$id = $value->getId();
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Previous`='".$id."',	`__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Previous'] = $id;
			} else if ($value === null) {
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Previous`='0', `__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Previous'] = 0;
			}
		}

		public function getPrevious() {
			if ($this->row['Previous'] == 0) {
				return null;
			} else {
				return SystemRoute::ROW($this->row['Previous']);
			}
		}

		public function setNext($value) {
			if (is_object($value) && $value->getClassName() == 'SystemRoute') {
				$id = $value->getId();
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Next`='".$id."',	`__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Next'] = $id;
			} else if ($value === null) {
				$db = Database::getInstance();
				$sql = "UPDATE `SystemRoute` SET `Next`='0', `__timestamp__` = ".time()." WHERE `id`='".$this->id."'";
				$db->sql($sql);
				$this->row['Next'] = 0;
			}
		}

		public function getNext() {
			if ($this->row['Next'] == 0) {
				return null;
			} else {
				return SystemRoute::ROW($this->row['Next']);
			}
		}
public function setCustomUrl($value) { $this->row['CustomUrl'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `CustomUrl`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getCustomUrl() { return $this->row['CustomUrl']; }

public function setLastModified($value) { $value = str_replace(',', '.', $value); $this->row['LastModified'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `LastModified`='$value', `__timestamp__` = $timestamp, `__operation__` = 'UPDATE'  WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql); } public function getLastModified() { $value = $this->row['LastModified']; settype($value, 'float'); return $value; }

public function setEtag($value) { $this->row['Etag'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Etag`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getEtag() { return $this->row['Etag']; }

public function setReference($value) { $this->row['Reference'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Reference`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getReference() { return $this->row['Reference']; }

public function setController($value) { $this->row['Controller'] = $value; $value = mysql_real_escape_string($value); $timestamp = time(); $sql = "UPDATE `SystemRoute` SET `Controller`='$value',`__timestamp__` = $timestamp, `__operation__` = 'UPDATE' WHERE `id`='{$this->id}'"; Database::getInstance()->sql($sql);} public function getController() { return $this->row['Controller']; }


	}
